{"ast":null,"code":"import React,{useState}from\"react\";import Navbar from\"./Components/Navbar\";// import About from \"./Components/About\";\nimport TextForm from\"./Components/TextForm\";import Alert from\"./Components/Alert\";// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[mode,setMode]=useState(\"light\");// whether dark mode is enabled or not\nconst[alert,setAlert]=useState(null);const showAlert=(message,type)=>{setAlert({msg:message,type:type});setTimeout(()=>{setAlert(null);},1500);};const[changeColor,setChangeColor]=useState(\"red\");const[changeColor1,setChangeColor1]=useState(\"green\");const[changeColor2,setChangeColor2]=useState(\"yellow\");const cnvt=()=>{if(changeColor===\"red\"){setChangeColor(\"white\");document.body.style.backgroundColor=\"red\";showAlert(\"Red mode has been enabled\",\"Success \");}else{setChangeColor(\"red\");document.body.style.backgroundColor=\"white\";showAlert(\"white mode has been enabled\",\"Success \");}};const cnvt1=()=>{if(changeColor1===\"green\"){setChangeColor1(\"white\");document.body.style.backgroundColor=\"green\";showAlert(\"Green mode has been enabled\",\"Success \");}else{setChangeColor1(\"green\");document.body.style.backgroundColor=\"white\";showAlert(\"White mode has been enabled\",\"Success \");}};const cnvt2=()=>{if(changeColor2===\"yellow\"){setChangeColor2(\"white\");document.body.style.backgroundColor=\"yellow\";showAlert(\"yellow mode has been enabled\",\"Success \");}else{setChangeColor2(\"yellow\");document.body.style.backgroundColor=\"white\";showAlert(\"White mode has been enabled\",\"Success \");}};const toggleMode=()=>{if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"#042743\";showAlert(\"Dark mode has been enabled\",\"Success \");}else{setMode(\"light\");document.body.style.backgroundColor=\"white  \";showAlert(\"Light mode has been enabled\",\"Success \");}};return/*#__PURE__*/ (// <BrowserRouter>\n_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",mode:mode,toggleMode:toggleMode,cnvt:cnvt,cnvt1:cnvt1,cnvt2:cnvt2}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter the text to analyze below\",mode:mode,showAlert:showAlert})})]})// {/* </BrowserRouter> */}\n);};export default App;","map":{"version":3,"names":["React","useState","Navbar","TextForm","Alert","jsx","_jsx","jsxs","_jsxs","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","changeColor","setChangeColor","changeColor1","setChangeColor1","changeColor2","setChangeColor2","cnvt","document","body","style","backgroundColor","cnvt1","cnvt2","toggleMode","children","title","className","heading"],"sources":["H:/REACT COURSE DEC 2023/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./Components/Navbar\";\n// import About from \"./Components/About\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const [changeColor, setChangeColor] = useState(\"red\");\n  const [changeColor1, setChangeColor1] = useState(\"green\");\n  const [changeColor2, setChangeColor2] = useState(\"yellow\");\n  const cnvt = () => {\n    if (changeColor === \"red\") {\n      setChangeColor(\"white\");\n      document.body.style.backgroundColor = \"red\";\n      showAlert(\"Red mode has been enabled\", \"Success \");\n    } else {\n      setChangeColor(\"red\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"white mode has been enabled\", \"Success \");\n    }\n  };\n  const cnvt1 = () => {\n    if (changeColor1 === \"green\") {\n      setChangeColor1(\"white\");\n      document.body.style.backgroundColor = \"green\";\n      showAlert(\"Green mode has been enabled\", \"Success \");\n    } else {\n      setChangeColor1(\"green\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"White mode has been enabled\", \"Success \");\n    }\n  };\n  const cnvt2 = () => {\n    if (changeColor2 === \"yellow\") {\n      setChangeColor2(\"white\");\n      document.body.style.backgroundColor = \"yellow\";\n      showAlert(\"yellow mode has been enabled\", \"Success \");\n    } else {\n      setChangeColor2(\"yellow\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"White mode has been enabled\", \"Success \");\n    }\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"Success \");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white  \";\n      showAlert(\"Light mode has been enabled\", \"Success \");\n    }\n  };\n  return (\n    // <BrowserRouter>\n      <div>\n        <Navbar\n          title=\"TextUtils\"\n          mode={mode}\n          toggleMode={toggleMode}\n          cnvt={cnvt}\n          cnvt1={cnvt1}\n          cnvt2={cnvt2}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route exact path=\"/about\" element={<About />} /> */}\n            {/* <Route\n              exact\n              path=\"/\"\n              element={ */}\n                <TextForm\n                  heading=\"Enter the text to analyze below\"\n                  mode={mode}\n                  showAlert={showAlert}\n                />\n              {/* }\n            /> */}\n          {/* </Routes> */}\n        </div>\n      </div>\n    // {/* </BrowserRouter> */}\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}