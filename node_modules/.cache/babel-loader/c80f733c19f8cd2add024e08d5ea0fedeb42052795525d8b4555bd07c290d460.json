{"ast":null,"code":"var _jsxFileName = \"H:\\\\REACT COURSE DEC 2023\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./Components/Navbar\";\nimport About from \"./Components/About\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const [changeColor, setChangeColor] = useState(\"red\");\n  const [changeColor1, setChangeColor1] = useState(\"green\");\n  const [changeColor2, setChangeColor2] = useState(\"yellow\");\n  const cnvt = () => {\n    if (changeColor === \"red\") {\n      setChangeColor(\"white\");\n      document.body.style.backgroundColor = \"red\";\n      showAlert(\"Red mode has been enabled\", \"Success \");\n    } else {\n      setChangeColor(\"red\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"white mode has been enabled\", \"Success \");\n    }\n  };\n  const cnvt1 = () => {\n    if (changeColor1 === \"green\") {\n      setChangeColor1(\"white\");\n      document.body.style.backgroundColor = \"green\";\n      showAlert(\"Green mode has been enabled\", \"Success \");\n    } else {\n      setChangeColor1(\"green\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"White mode has been enabled\", \"Success \");\n    }\n  };\n  const cnvt2 = () => {\n    if (changeColor2 === \"yellow\") {\n      setChangeColor2(\"white\");\n      document.body.style.backgroundColor = \"yellow\";\n      showAlert(\"yellow mode has been enabled\", \"Success \");\n    } else {\n      setChangeColor2(\"yellow\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"White mode has been enabled\", \"Success \");\n    }\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"Success \");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white  \";\n      showAlert(\"Light mode has been enabled\", \"Success \");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        mode: mode,\n        toggleMode: toggleMode,\n        cnvt: cnvt,\n        cnvt1: cnvt1,\n        cnvt2: cnvt2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(\"switch\", {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(TextForm, {\n              heading: \"Enter the text to analyze below\",\n              mode: mode,\n              showAlert: showAlert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UaHKnwZv+rBC4/wfdFCP6lVizQs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","About","TextForm","Alert","Routes","Route","jsxDEV","_jsxDEV","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","changeColor","setChangeColor","changeColor1","setChangeColor1","changeColor2","setChangeColor2","cnvt","document","body","style","backgroundColor","cnvt1","cnvt2","toggleMode","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","heading","_c","$RefreshReg$"],"sources":["H:/REACT COURSE DEC 2023/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./Components/Navbar\";\nimport About from \"./Components/About\";\nimport TextForm from \"./Components/TextForm\";\nimport Alert from \"./Components/Alert\";\nimport { Routes, Route } from \"react-router-dom\";\n\nconst App = () => {\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const [changeColor, setChangeColor] = useState(\"red\");\n  const [changeColor1, setChangeColor1] = useState(\"green\");\n  const [changeColor2, setChangeColor2] = useState(\"yellow\");\n  const cnvt = () => {\n    if (changeColor === \"red\") {\n      setChangeColor(\"white\");\n      document.body.style.backgroundColor = \"red\";\n      showAlert(\"Red mode has been enabled\", \"Success \");\n    } else {\n      setChangeColor(\"red\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"white mode has been enabled\", \"Success \");\n    }\n  };\n  const cnvt1 = () => {\n    if (changeColor1 === \"green\") {\n      setChangeColor1(\"white\");\n      document.body.style.backgroundColor = \"green\";\n      showAlert(\"Green mode has been enabled\", \"Success \");\n    } else {\n      setChangeColor1(\"green\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"White mode has been enabled\", \"Success \");\n    }\n  };\n  const cnvt2 = () => {\n    if (changeColor2 === \"yellow\") {\n      setChangeColor2(\"white\");\n      document.body.style.backgroundColor = \"yellow\";\n      showAlert(\"yellow mode has been enabled\", \"Success \");\n    } else {\n      setChangeColor2(\"yellow\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"White mode has been enabled\", \"Success \");\n    }\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"Success \");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white  \";\n      showAlert(\"Light mode has been enabled\", \"Success \");\n    }\n  };\n  return (\n    <Routes>\n      <div>\n        <Navbar\n          title=\"TextUtils\"\n          mode={mode}\n          toggleMode={toggleMode}\n          cnvt={cnvt}\n          cnvt1={cnvt1}\n          cnvt2={cnvt2}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <switch>\n            <Route path=\"/about\" element={<About />} />\n\n            <Route path=\"/\">\n              <TextForm\n                heading=\"Enter the text to analyze below\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n            </Route>\n          </switch>\n        </div>\n      </div>\n    </Routes>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}